---
- include_role:
    name: andrewrothstein.unarchive-deps
- include_role:
    name: andrewrothstein.dotnet_deps
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: checking for dotnet installation in {{ dotnet_install_dir }}...
  become: true
  stat:
    path: '{{ dotnet_install_dir }}'
  changed_when: false
  register: dotnet_binary_dir
- when: not dotnet_binary_dir.stat.exists
  block:
    - name: download {{ dotnet_tgz_url }}...
      become: true
      become_user: root
      get_url:
        url: '{{ dotnet_tgz_url }}'
        dest: '{{ dotnet_tmp_tgz }}'
        mode: 0644
        checksum: '{{ dotnet_checksum }}'
    - name: mkdir {{ dotnet_install_dir }}
      become: true
      become_user: root
      file:
        path: '{{ dotnet_install_dir }}'
        state: directory
        mode: 0755
    - name: unarchiving {{ dotnet_tmp_tgz }} into {{ dotnet_install_dir }}...
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ dotnet_tmp_tgz }}'
        dest: '{{ dotnet_install_dir }}'
        creates: '{{ dotnet_fq_exe }}'
  always:
    - name: delete tgz...
      become: true
      become_user: root
      file:
        path: '{{ dotnet_tmp_tgz }}'
        state: absent
- name: linking {{ dotnet_fq_link }} to {{ dotnet_fq_exe }}...
  become: true
  become_user: root
  file:
    src: '{{ dotnet_fq_exe }}'
    dest: '{{ dotnet_fq_link }}'
    state: link
